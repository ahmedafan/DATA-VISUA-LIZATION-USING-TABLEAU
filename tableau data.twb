<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='color' value='#000000' />
    </style-rule>
    <style-rule element='dash-title'>
      <format attr='color' value='#000000' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-duration' value='0.5' />
      <format attr='animation-style' value='as-phased' />
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='tableau table 1 (tableau table 1)' inline='true' name='federated.0z5dlko0478ufw163cnqi069qapz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 1' name='excel-direct.1d8a8q818t2m5w19pji79038c7ki'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/pROJECT 2/tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1d8a8q818t2m5w19pji79038c7ki' name='tableau table 1' table='[&apos;tableau table 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1d8a8q818t2m5w19pji79038c7ki' name='tableau table 1' table='[&apos;tableau table 1$&apos;]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tableau table 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[tableau table 1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau table 1_5054BA5C79174E88BE923B08A35C0935]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[tableau table 1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau table 1_5054BA5C79174E88BE923B08A35C0935]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[tableau table 1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau table 1_5054BA5C79174E88BE923B08A35C0935]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='tableau table 1' datatype='table' name='[__tableau_internal_object_id__].[tableau table 1_5054BA5C79174E88BE923B08A35C0935]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/AFAN/AppData/Local/Temp/TableauTemp/#TableauTemp_1ak7eso03nnpl71723hwt18pqjmb.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/20/2024 10:50:19 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>tableau table 1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau table 1_5054BA5C79174E88BE923B08A35C0935]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>tableau table 1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau table 1_5054BA5C79174E88BE923B08A35C0935]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>tableau table 1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tableau table 1_5054BA5C79174E88BE923B08A35C0935]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tableau table 1' id='tableau table 1_5054BA5C79174E88BE923B08A35C0935'>
            <properties context=''>
              <relation connection='excel-direct.1d8a8q818t2m5w19pji79038c7ki' name='tableau table 1' table='[&apos;tableau table 1$&apos;]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 3)' inline='true' name='federated.0vstpoj1nd4mz81bfh59g00dem01' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.0dnu6nv1o2g8qx11saleb1gjw6rs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/pROJECT 2/tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dnu6nv1o2g8qx11saleb1gjw6rs' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dnu6nv1o2g8qx11saleb1gjw6rs' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]' role='measure' type='quantitative' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/AFAN/AppData/Local/Temp/TableauTemp/#TableauTemp_0m345nz0175yfq15riw7b0jofq8w.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/20/2024 10:52:40 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_994ACAB5B1E2424B8A2D68F57D19759D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_994ACAB5B1E2424B8A2D68F57D19759D'>
            <properties context=''>
              <relation connection='excel-direct.0dnu6nv1o2g8qx11saleb1gjw6rs' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TABLEAU TABLE 4)' inline='true' name='federated.0apvzt31unltg918vt80404s15wu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TABLEAU TABLE 4' name='excel-direct.06iqnuc0576jzc10jfi2c0yb58ob'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/pROJECT 2/TABLEAU TABLE 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.06iqnuc0576jzc10jfi2c0yb58ob' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.06iqnuc0576jzc10jfi2c0yb58ob' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/AFAN/AppData/Local/Temp/TableauTemp/#TableauTemp_1us47yh1wdltk4158092e1qgjiu2.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/20/2024 10:53:17 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>313</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>304</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1152</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18862</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31224</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BCEEEE78B9E14D8C9591E8B22FF055B5'>
            <properties context=''>
              <relation connection='excel-direct.06iqnuc0576jzc10jfi2c0yb58ob' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 2)' inline='true' name='federated.0lk9re71vk6qql1fbdeyj0idqp6i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 2' name='excel-direct.1j0npay07n7guk16ey7eo07oyej0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/pROJECT 2/tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1j0npay07n7guk16ey7eo07oyej0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1j0npay07n7guk16ey7eo07oyej0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FFBEE9C3751341B4BFC2E81DAA394496]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FFBEE9C3751341B4BFC2E81DAA394496]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FFBEE9C3751341B4BFC2E81DAA394496]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/AFAN/AppData/Local/Temp/TableauTemp/#TableauTemp_14ay4q10bs29uz0ztssos1vncfud.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/20/2024 10:51:40 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FFBEE9C3751341B4BFC2E81DAA394496]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FFBEE9C3751341B4BFC2E81DAA394496]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_red_brown_10_0' type='palette'>
            <map to='#466f9d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#91b3d7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ed444a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#feb5a2'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FFBEE9C3751341B4BFC2E81DAA394496'>
            <properties context=''>
              <relation connection='excel-direct.1j0npay07n7guk16ey7eo07oyej0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1_5F24F0DA830044A5BEDEA6D697664B83]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='tableau table 1 (tableau table 1)' name='federated.0z5dlko0478ufw163cnqi069qapz' />
          </datasources>
          <datasource-dependencies datasource='federated.0z5dlko0478ufw163cnqi069qapz'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z5dlko0478ufw163cnqi069qapz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0z5dlko0478ufw163cnqi069qapz].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0z5dlko0478ufw163cnqi069qapz].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0z5dlko0478ufw163cnqi069qapz].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0z5dlko0478ufw163cnqi069qapz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0z5dlko0478ufw163cnqi069qapz].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0z5dlko0478ufw163cnqi069qapz].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0z5dlko0478ufw163cnqi069qapz].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0z5dlko0478ufw163cnqi069qapz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0z5dlko0478ufw163cnqi069qapz].[:Measure Names]' value='211' />
            <format attr='height' value='67' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='font-style' data-class='subtotal' scope='cols' value='normal' />
            <format attr='text-format' field='[federated.0z5dlko0478ufw163cnqi069qapz].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='font-size' value='11' />
            <format attr='text-format' field='[federated.0z5dlko0478ufw163cnqi069qapz].[sum:total_deaths:qk]' value='N' />
            <format attr='text-format' field='[federated.0z5dlko0478ufw163cnqi069qapz].[sum:total_cases:qk]' value='N' />
            <format attr='text-format' field='[federated.0z5dlko0478ufw163cnqi069qapz].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0z5dlko0478ufw163cnqi069qapz].[:Measure Names]' value='23' />
            <format attr='background-color' scope='cols' value='#55aaff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#555555' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0z5dlko0478ufw163cnqi069qapz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dashed' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0z5dlko0478ufw163cnqi069qapz].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{05F0F040-04F7-45DA-A6FA-FA8B49748F99}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 2)' name='federated.0lk9re71vk6qql1fbdeyj0idqp6i' />
          </datasources>
          <datasource-dependencies datasource='federated.0lk9re71vk6qql1fbdeyj0idqp6i'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[none:location:nk]' value='116' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='19' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#55ffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{BDA5BA3C-A3FA-4FA1-AFB6-2244ECC14E19}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 3)' name='federated.0vstpoj1nd4mz81bfh59g00dem01' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vstpoj1nd4mz81bfh59g00dem01'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vstpoj1nd4mz81bfh59g00dem01].[Longitude (generated)]' field-type='quantitative' max='18075205.198610589' min='-19073162.145586424' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vstpoj1nd4mz81bfh59g00dem01].[Latitude (generated)]' field-type='quantitative' max='14431503.920164142' min='-7959293.7755254488' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vstpoj1nd4mz81bfh59g00dem01].[none:Location:nk]' />
              <color column='[federated.0vstpoj1nd4mz81bfh59g00dem01].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000a0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vstpoj1nd4mz81bfh59g00dem01].[Latitude (generated)]</rows>
        <cols>[federated.0vstpoj1nd4mz81bfh59g00dem01].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{10EC73B6-0D68-4FF2-95AA-12261A8E7549}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TABLEAU TABLE 4)' name='federated.0apvzt31unltg918vt80404s15wu' />
          </datasources>
          <datasource-dependencies datasource='federated.0apvzt31unltg918vt80404s15wu'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-prediction-interval-lower' name='[fPIL:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-prediction-interval-upper' name='[fPIU:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]' value='95' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]' />
              <text column='[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]' />
              <color column='[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]' />
              <text column='[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-family' value='Arial' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIL:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIU:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Japan&quot;</value>
                <value>#2021-10-01 00:00:00#</value>
                <value>0.5807195493360584</value>
                <value>1.0971799235669486</value>
                <value>0.8389497364515035</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIL:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIU:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:sum:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russia&quot;</value>
                <value>#2021-03-01 00:00:00#</value>
                <value>%null%</value>
                <value>%null%</value>
                <value>2.9860621524342874</value>
                <value>92.567926725462911</value>
                <value>&quot;Actual&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIL:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIU:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:sum:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United Arab Emirates&quot;</value>
                <value>#2021-10-01 00:00:00#</value>
                <value>7.022480477724768</value>
                <value>11.90779383580721</value>
                <value>9.465137156765989</value>
                <value>285.99622056424897</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIL:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIU:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:sum:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United Kingdom&quot;</value>
                <value>#2021-10-01 00:00:00#</value>
                <value>9.9643240475826431</value>
                <value>19.901529866278675</value>
                <value>14.932926956930659</value>
                <value>449.81166579090143</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIL:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIU:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;China&quot;</value>
                <value>#2021-10-01 00:00:00#</value>
                <value>0.002745521410606625</value>
                <value>0.011103129411716716</value>
                <value>0.006924325411161671</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[tmn:date:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIL:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fPIU:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[fVal:sum:PercentPopulationInfected:qk]</field>
                  <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>#2021-10-01 00:00:00#</value>
                <value>0.97461863053807296</value>
                <value>1.5574331335272205</value>
                <value>1.2660258820326467</value>
                <value>38.629935985405837</value>
                <value>&quot;Estimate&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{91FD7D6E-EDE6-4A0C-9B31-357A22BDD2A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97988' id='15' param='horz' type-v2='layout-flow' w='99002' x='499' y='1006'>
            <zone h='97988' id='13' type-v2='layout-basic' w='99002' x='499' y='1006'>
              <zone h='58113' id='3' name='Sheet 3' w='49501' x='50000' y='1006'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39875' id='9' name='Sheet 4' w='84445' x='499' y='59119'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39875' id='10' name='Sheet 4' pane-specification-id='0' param='[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]&#10;[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]' type-v2='color' w='14557' x='84944' y='59119'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23900' id='11' name='Sheet 1' w='49501' x='499' y='1006'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34213' id='12' name='Sheet 2' w='49501' x='499' y='24906'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97988' id='20' param='vert' type-v2='layout-flow' w='99002' x='499' y='1006'>
                <zone fixed-size='183' h='23900' id='11' is-fixed='true' name='Sheet 1' w='49501' x='499' y='1006'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58113' id='3' is-fixed='true' name='Sheet 3' w='49501' x='50000' y='1006'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='34213' id='12' is-fixed='true' name='Sheet 2' w='49501' x='499' y='24906'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39875' id='9' is-fixed='true' name='Sheet 4' w='84445' x='499' y='59119'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='39875' id='10' name='Sheet 4' pane-specification-id='0' param='[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]&#10;[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]' type-v2='color' w='14557' x='84944' y='59119'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{68917DF0-52F1-4F91-8F1D-A77E6DDB3D60}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z5dlko0478ufw163cnqi069qapz].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8EF3E48-213F-43C5-A24F-711CBD767A10}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F3E271B-A8C0-4534-9127-3BA0C7CA21F4}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0vstpoj1nd4mz81bfh59g00dem01].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vstpoj1nd4mz81bfh59g00dem01].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E034549E-D6DD-4856-B3ED-FE71C055442F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]&#10;[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]</field>
            <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</field>
            <field>[federated.0apvzt31unltg918vt80404s15wu].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87D5EC3A-74E9-48F3-AA0C-C59BF7E3C0D0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0lk9re71vk6qql1fbdeyj0idqp6i].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Forecast Indicator:nk]</field>
              <field>[federated.0apvzt31unltg918vt80404s15wu].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{3A3B6B83-4D59-4AD4-B754-7AD3D15242F6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='94' name='Sheet 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      9v8BIT9dEcNuJagAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
